* 
* ==> Audit <==
* |------------|---------|----------|--------|---------|---------------------|---------------------|
|  Command   |  Args   | Profile  |  User  | Version |     Start Time      |      End Time       |
|------------|---------|----------|--------|---------|---------------------|---------------------|
| start      |         | minikube | franck | v1.31.2 | 06 Nov 23 05:41 WAT |                     |
| start      |         | minikube | franck | v1.31.2 | 06 Nov 23 05:42 WAT |                     |
| start      |         | minikube | franck | v1.31.2 | 06 Nov 23 06:32 WAT |                     |
| config     | view    | minikube | franck | v1.31.2 | 06 Nov 23 07:15 WAT | 06 Nov 23 07:15 WAT |
| start      |         | minikube | franck | v1.31.2 | 06 Nov 23 12:24 WAT |                     |
| start      | --force | minikube | franck | v1.31.2 | 07 Nov 23 08:56 WAT |                     |
| start      |         | minikube | franck | v1.31.2 | 07 Nov 23 08:56 WAT |                     |
| delete     |         | minikube | franck | v1.31.2 | 07 Nov 23 09:02 WAT | 07 Nov 23 09:02 WAT |
| delete     |         | minikube | franck | v1.31.2 | 07 Nov 23 09:02 WAT | 07 Nov 23 09:02 WAT |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:25 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:26 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:30 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:31 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:31 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:32 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:32 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:41 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:41 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:41 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:41 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:51 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:55 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 12:56 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 13:00 WAT |                     |
| docker-env |         | minikube | franck | v1.31.2 | 07 Nov 23 13:00 WAT |                     |
| start      |         | minikube | franck | v1.31.2 | 07 Nov 23 13:11 WAT |                     |
| start      |         | minikube | franck | v1.31.2 | 07 Nov 23 13:14 WAT |                     |
| start      |         | minikube | franck | v1.31.2 | 07 Nov 23 13:19 WAT |                     |
| start      |         | minikube | franck | v1.31.2 | 07 Nov 23 13:44 WAT |                     |
| start      |         | minikube | franck | v1.31.2 | 07 Nov 23 13:50 WAT |                     |
|------------|---------|----------|--------|---------|---------------------|---------------------|

* 
* ==> Dernier d√©marrage <==
* Log file created at: 2023/11/07 13:50:25
Running on machine: franck-HP-ProBook-x360-11-G2
Binary: Built with gc go1.20.7 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I1107 13:50:25.584837  307277 out.go:296] Setting OutFile to fd 1 ...
I1107 13:50:25.584972  307277 out.go:348] isatty.IsTerminal(1) = true
I1107 13:50:25.584981  307277 out.go:309] Setting ErrFile to fd 2...
I1107 13:50:25.584994  307277 out.go:348] isatty.IsTerminal(2) = true
I1107 13:50:25.585290  307277 root.go:338] Updating PATH: /home/franck/.minikube/bin
I1107 13:50:25.585886  307277 out.go:303] Setting JSON to false
I1107 13:50:25.605706  307277 start.go:128] hostinfo: {"hostname":"franck-HP-ProBook-x360-11-G2","uptime":19534,"bootTime":1699341892,"procs":270,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"20.04","kernelVersion":"5.15.0-76-generic","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"host","hostId":"b5a2f1bc-72b5-4fa2-8bc7-2f3ebf3d6479"}
I1107 13:50:25.605915  307277 start.go:138] virtualization: kvm host
I1107 13:50:25.634088  307277 out.go:177] üòÑ  minikube v1.31.2 sur Ubuntu 20.04
I1107 13:50:25.686761  307277 notify.go:220] Checking for updates...
I1107 13:50:25.690351  307277 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.4
W1107 13:50:25.691739  307277 notify.go:59] Error getting json from minikube version url: error with http GET for endpoint https://storage.googleapis.com/minikube/releases-v2.json: Get "https://storage.googleapis.com/minikube/releases-v2.json": dial tcp: lookup storage.googleapis.com on 127.0.0.53:53: server misbehaving
I1107 13:50:25.691877  307277 driver.go:373] Setting default libvirt URI to qemu:///system
I1107 13:50:25.736949  307277 docker.go:121] docker version: linux-24.0.6:Docker Engine - Community
I1107 13:50:25.737055  307277 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1107 13:50:25.811028  307277 info.go:266] docker info: {ID:4522ee6f-8f4d-4790-a1b5-e679ce737393 Containers:10 ContainersRunning:1 ContainersPaused:0 ContainersStopped:9 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:31 OomKillDisable:true NGoroutines:45 SystemTime:2023-11-07 13:50:25.800646304 +0100 WAT LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:0 KernelVersion:5.15.0-76-generic OperatingSystem:Ubuntu 20.04.2 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:7697616896 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:franck-HP-ProBook-x360-11-G2 Labels:[] ExperimentalBuild:false ServerVersion:24.0.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:61f9fd88f79f081d64d6fa3bb1a0dc71ec870523 Expected:61f9fd88f79f081d64d6fa3bb1a0dc71ec870523} RuncCommit:{ID:v1.1.9-0-gccaecfc Expected:v1.1.9-0-gccaecfc} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.21.0]] Warnings:<nil>}}
I1107 13:50:25.811162  307277 docker.go:294] overlay module found
I1107 13:50:25.837722  307277 out.go:177] ‚ú®  Utilisation du pilote docker bas√© sur le profil existant
I1107 13:50:25.864218  307277 start.go:298] selected driver: docker
I1107 13:50:25.864239  307277 start.go:902] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:docker.io/kicbase/stable:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/franck:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I1107 13:50:25.864626  307277 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1107 13:50:25.864980  307277 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1107 13:50:25.958810  307277 info.go:266] docker info: {ID:4522ee6f-8f4d-4790-a1b5-e679ce737393 Containers:10 ContainersRunning:1 ContainersPaused:0 ContainersStopped:9 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:31 OomKillDisable:true NGoroutines:45 SystemTime:2023-11-07 13:50:25.948248961 +0100 WAT LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:0 KernelVersion:5.15.0-76-generic OperatingSystem:Ubuntu 20.04.2 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:7697616896 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:franck-HP-ProBook-x360-11-G2 Labels:[] ExperimentalBuild:false ServerVersion:24.0.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:61f9fd88f79f081d64d6fa3bb1a0dc71ec870523 Expected:61f9fd88f79f081d64d6fa3bb1a0dc71ec870523} RuncCommit:{ID:v1.1.9-0-gccaecfc Expected:v1.1.9-0-gccaecfc} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.21.0]] Warnings:<nil>}}
I1107 13:50:25.979190  307277 cni.go:84] Creating CNI manager for ""
I1107 13:50:25.979203  307277 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1107 13:50:25.979217  307277 start_flags.go:319] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:docker.io/kicbase/stable:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/franck:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I1107 13:50:26.005881  307277 out.go:177] üëç  D√©marrage du noeud de plan de contr√¥le minikube dans le cluster minikube
I1107 13:50:26.032258  307277 cache.go:122] Beginning downloading kic base image for docker with docker
I1107 13:50:26.058884  307277 out.go:177] üöú  Extraction de l'image de base...
I1107 13:50:26.085566  307277 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I1107 13:50:26.085677  307277 image.go:79] Checking for docker.io/kicbase/stable:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local docker daemon
I1107 13:50:26.085714  307277 preload.go:148] Found local preload: /home/franck/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4
I1107 13:50:26.085798  307277 cache.go:57] Caching tarball of preloaded images
I1107 13:50:26.086223  307277 preload.go:174] Found /home/franck/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I1107 13:50:26.086256  307277 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.4 on docker
I1107 13:50:26.086875  307277 profile.go:148] Saving config to /home/franck/.minikube/profiles/minikube/config.json ...
I1107 13:50:26.125909  307277 image.go:83] Found docker.io/kicbase/stable:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local docker daemon, skipping pull
I1107 13:50:26.125921  307277 cache.go:145] docker.io/kicbase/stable:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 exists in daemon, skipping load
I1107 13:50:26.125937  307277 cache.go:195] Successfully downloaded all kic artifacts
I1107 13:50:26.125977  307277 start.go:365] acquiring machines lock for minikube: {Name:mkff19b66d3bc375ba7ed12b4bcdb9fa8092f2d8 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I1107 13:50:26.126040  307277 start.go:369] acquired machines lock for "minikube" in 42.385¬µs
I1107 13:50:26.126057  307277 start.go:96] Skipping create...Using existing machine configuration
I1107 13:50:26.126067  307277 fix.go:54] fixHost starting: 
I1107 13:50:26.126580  307277 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1107 13:50:26.148206  307277 fix.go:102] recreateIfNeeded on minikube: state=Running err=<nil>
W1107 13:50:26.148233  307277 fix.go:128] unexpected machine state, will restart: <nil>
I1107 13:50:26.178132  307277 out.go:177] üèÉ  Mise √† jour du container docker en marche "minikube" ...
I1107 13:50:26.204402  307277 machine.go:88] provisioning docker machine ...
I1107 13:50:26.204455  307277 ubuntu.go:169] provisioning hostname "minikube"
I1107 13:50:26.204638  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:26.247837  307277 main.go:141] libmachine: Using SSH client type: native
I1107 13:50:26.248355  307277 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80f160] 0x812200 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I1107 13:50:26.248365  307277 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I1107 13:50:26.442351  307277 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I1107 13:50:26.442450  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:26.463664  307277 main.go:141] libmachine: Using SSH client type: native
I1107 13:50:26.464151  307277 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80f160] 0x812200 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I1107 13:50:26.464165  307277 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I1107 13:50:26.616884  307277 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I1107 13:50:26.616925  307277 ubuntu.go:175] set auth options {CertDir:/home/franck/.minikube CaCertPath:/home/franck/.minikube/certs/ca.pem CaPrivateKeyPath:/home/franck/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/franck/.minikube/machines/server.pem ServerKeyPath:/home/franck/.minikube/machines/server-key.pem ClientKeyPath:/home/franck/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/franck/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/franck/.minikube}
I1107 13:50:26.617006  307277 ubuntu.go:177] setting up certificates
I1107 13:50:26.617023  307277 provision.go:83] configureAuth start
I1107 13:50:26.617174  307277 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I1107 13:50:26.656630  307277 provision.go:138] copyHostCerts
I1107 13:50:26.656677  307277 exec_runner.go:144] found /home/franck/.minikube/ca.pem, removing ...
I1107 13:50:26.656688  307277 exec_runner.go:203] rm: /home/franck/.minikube/ca.pem
I1107 13:50:26.656749  307277 exec_runner.go:151] cp: /home/franck/.minikube/certs/ca.pem --> /home/franck/.minikube/ca.pem (1078 bytes)
I1107 13:50:26.656843  307277 exec_runner.go:144] found /home/franck/.minikube/cert.pem, removing ...
I1107 13:50:26.656847  307277 exec_runner.go:203] rm: /home/franck/.minikube/cert.pem
I1107 13:50:26.656879  307277 exec_runner.go:151] cp: /home/franck/.minikube/certs/cert.pem --> /home/franck/.minikube/cert.pem (1123 bytes)
I1107 13:50:26.656974  307277 exec_runner.go:144] found /home/franck/.minikube/key.pem, removing ...
I1107 13:50:26.656978  307277 exec_runner.go:203] rm: /home/franck/.minikube/key.pem
I1107 13:50:26.657009  307277 exec_runner.go:151] cp: /home/franck/.minikube/certs/key.pem --> /home/franck/.minikube/key.pem (1675 bytes)
I1107 13:50:26.657085  307277 provision.go:112] generating server cert: /home/franck/.minikube/machines/server.pem ca-key=/home/franck/.minikube/certs/ca.pem private-key=/home/franck/.minikube/certs/ca-key.pem org=franck.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I1107 13:50:26.985083  307277 provision.go:172] copyRemoteCerts
I1107 13:50:26.985139  307277 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I1107 13:50:26.985181  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:27.005020  307277 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/franck/.minikube/machines/minikube/id_rsa Username:docker}
I1107 13:50:27.130277  307277 ssh_runner.go:362] scp /home/franck/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I1107 13:50:27.164937  307277 ssh_runner.go:362] scp /home/franck/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1078 bytes)
I1107 13:50:27.193462  307277 ssh_runner.go:362] scp /home/franck/.minikube/machines/server.pem --> /etc/docker/server.pem (1200 bytes)
I1107 13:50:27.223085  307277 provision.go:86] duration metric: configureAuth took 606.050759ms
I1107 13:50:27.223100  307277 ubuntu.go:193] setting minikube options for container-runtime
I1107 13:50:27.223363  307277 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I1107 13:50:27.223407  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:27.243889  307277 main.go:141] libmachine: Using SSH client type: native
I1107 13:50:27.244443  307277 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80f160] 0x812200 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I1107 13:50:27.244458  307277 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I1107 13:50:27.402887  307277 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I1107 13:50:27.402911  307277 ubuntu.go:71] root file system type: overlay
I1107 13:50:27.403207  307277 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I1107 13:50:27.403381  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:27.435978  307277 main.go:141] libmachine: Using SSH client type: native
I1107 13:50:27.436484  307277 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80f160] 0x812200 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I1107 13:50:27.436557  307277 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I1107 13:50:27.637344  307277 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I1107 13:50:27.637476  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:27.657858  307277 main.go:141] libmachine: Using SSH client type: native
I1107 13:50:27.658344  307277 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80f160] 0x812200 <nil>  [] 0s} 127.0.0.1 32777 <nil> <nil>}
I1107 13:50:27.658359  307277 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I1107 13:50:27.843884  307277 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I1107 13:50:27.843917  307277 machine.go:91] provisioned docker machine in 1.639488117s
I1107 13:50:27.843943  307277 start.go:300] post-start starting for "minikube" (driver="docker")
I1107 13:50:27.843974  307277 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I1107 13:50:27.844153  307277 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I1107 13:50:27.844300  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:27.883953  307277 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/franck/.minikube/machines/minikube/id_rsa Username:docker}
I1107 13:50:28.014659  307277 ssh_runner.go:195] Run: cat /etc/os-release
I1107 13:50:28.021023  307277 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I1107 13:50:28.021101  307277 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I1107 13:50:28.021132  307277 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I1107 13:50:28.021141  307277 info.go:137] Remote host: Ubuntu 22.04.2 LTS
I1107 13:50:28.021153  307277 filesync.go:126] Scanning /home/franck/.minikube/addons for local assets ...
I1107 13:50:28.021230  307277 filesync.go:126] Scanning /home/franck/.minikube/files for local assets ...
I1107 13:50:28.021276  307277 start.go:303] post-start completed in 177.318067ms
I1107 13:50:28.021343  307277 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I1107 13:50:28.021404  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:28.048163  307277 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/franck/.minikube/machines/minikube/id_rsa Username:docker}
I1107 13:50:28.152476  307277 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I1107 13:50:28.158352  307277 fix.go:56] fixHost completed within 2.032283861s
I1107 13:50:28.158364  307277 start.go:83] releasing machines lock for "minikube", held for 2.032315862s
I1107 13:50:28.158432  307277 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I1107 13:50:28.183326  307277 ssh_runner.go:195] Run: cat /version.json
I1107 13:50:28.183343  307277 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I1107 13:50:28.183387  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:28.183390  307277 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1107 13:50:28.207635  307277 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/franck/.minikube/machines/minikube/id_rsa Username:docker}
I1107 13:50:28.211027  307277 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32777 SSHKeyPath:/home/franck/.minikube/machines/minikube/id_rsa Username:docker}
I1107 13:50:28.311337  307277 ssh_runner.go:195] Run: systemctl --version
W1107 13:50:28.329116  307277 start.go:815] [curl -sS -m 2 https://registry.k8s.io/] failed: curl -sS -m 2 https://registry.k8s.io/: Process exited with status 6
stdout:

stderr:
curl: (6) Could not resolve host: registry.k8s.io
W1107 13:50:28.329264  307277 out.go:239] ‚ùó  Ce container rencontre des difficult√©s pour acc√©der √† https://registry.k8s.io
W1107 13:50:28.329304  307277 out.go:239] üí°  Pour extraire de nouvelles images externes, vous devrez peut-√™tre configurer un proxy¬†: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/
I1107 13:50:28.329393  307277 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I1107 13:50:28.339626  307277 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I1107 13:50:28.387924  307277 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I1107 13:50:28.388057  307277 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I1107 13:50:28.410120  307277 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I1107 13:50:28.410150  307277 start.go:466] detecting cgroup driver to use...
I1107 13:50:28.410205  307277 detect.go:196] detected "cgroupfs" cgroup driver on host os
I1107 13:50:28.410412  307277 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I1107 13:50:28.440208  307277 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I1107 13:50:28.452082  307277 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I1107 13:50:28.464335  307277 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I1107 13:50:28.464398  307277 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I1107 13:50:28.475945  307277 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1107 13:50:28.488110  307277 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I1107 13:50:28.500042  307277 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1107 13:50:28.511523  307277 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I1107 13:50:28.522551  307277 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I1107 13:50:28.534756  307277 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I1107 13:50:28.545120  307277 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I1107 13:50:28.557174  307277 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1107 13:50:28.672964  307277 ssh_runner.go:195] Run: sudo systemctl restart containerd
I1107 13:50:28.782292  307277 start.go:466] detecting cgroup driver to use...
I1107 13:50:28.782329  307277 detect.go:196] detected "cgroupfs" cgroup driver on host os
I1107 13:50:28.782390  307277 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I1107 13:50:28.800018  307277 cruntime.go:276] skipping containerd shutdown because we are bound to it
I1107 13:50:28.800071  307277 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I1107 13:50:28.816931  307277 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I1107 13:50:28.845569  307277 ssh_runner.go:195] Run: which cri-dockerd
I1107 13:50:28.850220  307277 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I1107 13:50:28.863625  307277 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I1107 13:50:28.886991  307277 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I1107 13:50:29.136164  307277 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I1107 13:50:29.298556  307277 docker.go:535] configuring docker to use "cgroupfs" as cgroup driver...
I1107 13:50:29.298578  307277 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I1107 13:50:29.321544  307277 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1107 13:50:29.438642  307277 ssh_runner.go:195] Run: sudo systemctl restart docker
I1107 13:50:30.318807  307277 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1107 13:50:30.437634  307277 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I1107 13:50:30.550410  307277 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1107 13:50:30.677059  307277 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1107 13:50:30.793617  307277 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I1107 13:50:30.814487  307277 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1107 13:50:30.957446  307277 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I1107 13:50:31.048322  307277 start.go:513] Will wait 60s for socket path /var/run/cri-dockerd.sock
I1107 13:50:31.048402  307277 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I1107 13:50:31.053728  307277 start.go:534] Will wait 60s for crictl version
I1107 13:50:31.053794  307277 ssh_runner.go:195] Run: which crictl
I1107 13:50:31.058366  307277 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I1107 13:50:31.112945  307277 start.go:550] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.4
RuntimeApiVersion:  v1
I1107 13:50:31.113003  307277 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1107 13:50:31.140406  307277 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1107 13:50:31.195225  307277 out.go:204] üê≥  Pr√©paration de Kubernetes v1.27.4 sur Docker 24.0.4...
I1107 13:50:31.195374  307277 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I1107 13:50:31.216023  307277 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I1107 13:50:31.220259  307277 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I1107 13:50:31.220320  307277 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1107 13:50:31.243732  307277 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1107 13:50:31.243749  307277 docker.go:566] Images already preloaded, skipping extraction
I1107 13:50:31.243815  307277 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1107 13:50:31.267188  307277 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1107 13:50:31.267213  307277 cache_images.go:84] Images are preloaded, skipping loading
I1107 13:50:31.267268  307277 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I1107 13:50:31.336269  307277 cni.go:84] Creating CNI manager for ""
I1107 13:50:31.336283  307277 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1107 13:50:31.336299  307277 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I1107 13:50:31.336325  307277 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.27.4 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I1107 13:50:31.336514  307277 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.27.4
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I1107 13:50:31.336609  307277 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.27.4/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I1107 13:50:31.336679  307277 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.27.4
I1107 13:50:31.347304  307277 binaries.go:44] Found k8s binaries, skipping transfer
I1107 13:50:31.347376  307277 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I1107 13:50:31.357869  307277 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I1107 13:50:31.378637  307277 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I1107 13:50:31.400436  307277 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I1107 13:50:31.422870  307277 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I1107 13:50:31.427063  307277 certs.go:56] Setting up /home/franck/.minikube/profiles/minikube for IP: 192.168.49.2
I1107 13:50:31.427090  307277 certs.go:190] acquiring lock for shared ca certs: {Name:mk40c3ce9770a7f53d3201a60e71adf2ab7b5f64 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1107 13:50:31.427234  307277 certs.go:199] skipping minikubeCA CA generation: /home/franck/.minikube/ca.key
I1107 13:50:31.427291  307277 certs.go:199] skipping proxyClientCA CA generation: /home/franck/.minikube/proxy-client-ca.key
I1107 13:50:31.427373  307277 certs.go:315] skipping minikube-user signed cert generation: /home/franck/.minikube/profiles/minikube/client.key
I1107 13:50:31.427437  307277 certs.go:315] skipping minikube signed cert generation: /home/franck/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I1107 13:50:31.427493  307277 certs.go:315] skipping aggregator signed cert generation: /home/franck/.minikube/profiles/minikube/proxy-client.key
I1107 13:50:31.427635  307277 certs.go:437] found cert: /home/franck/.minikube/certs/home/franck/.minikube/certs/ca-key.pem (1675 bytes)
I1107 13:50:31.427677  307277 certs.go:437] found cert: /home/franck/.minikube/certs/home/franck/.minikube/certs/ca.pem (1078 bytes)
I1107 13:50:31.427711  307277 certs.go:437] found cert: /home/franck/.minikube/certs/home/franck/.minikube/certs/cert.pem (1123 bytes)
I1107 13:50:31.427740  307277 certs.go:437] found cert: /home/franck/.minikube/certs/home/franck/.minikube/certs/key.pem (1675 bytes)
I1107 13:50:31.428350  307277 ssh_runner.go:362] scp /home/franck/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I1107 13:50:31.457408  307277 ssh_runner.go:362] scp /home/franck/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I1107 13:50:31.486718  307277 ssh_runner.go:362] scp /home/franck/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I1107 13:50:31.515437  307277 ssh_runner.go:362] scp /home/franck/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I1107 13:50:31.545553  307277 ssh_runner.go:362] scp /home/franck/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I1107 13:50:31.577111  307277 ssh_runner.go:362] scp /home/franck/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I1107 13:50:31.607230  307277 ssh_runner.go:362] scp /home/franck/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I1107 13:50:31.636144  307277 ssh_runner.go:362] scp /home/franck/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I1107 13:50:31.664627  307277 ssh_runner.go:362] scp /home/franck/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I1107 13:50:31.693635  307277 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I1107 13:50:31.715561  307277 ssh_runner.go:195] Run: openssl version
I1107 13:50:31.722125  307277 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I1107 13:50:31.735580  307277 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I1107 13:50:31.739899  307277 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Nov  7 12:42 /usr/share/ca-certificates/minikubeCA.pem
I1107 13:50:31.739952  307277 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I1107 13:50:31.748543  307277 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I1107 13:50:31.759354  307277 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I1107 13:50:31.763398  307277 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I1107 13:50:31.772258  307277 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I1107 13:50:31.780335  307277 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I1107 13:50:31.788766  307277 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I1107 13:50:31.796955  307277 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I1107 13:50:31.804828  307277 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I1107 13:50:31.812662  307277 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:docker.io/kicbase/stable:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/franck:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I1107 13:50:31.812790  307277 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I1107 13:50:31.833411  307277 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I1107 13:50:31.844124  307277 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I1107 13:50:31.854684  307277 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I1107 13:50:31.854743  307277 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1107 13:50:31.865253  307277 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1107 13:50:31.865277  307277 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1107 13:50:31.913627  307277 kubeadm.go:322] [init] Using Kubernetes version: v1.27.4
I1107 13:50:31.914130  307277 kubeadm.go:322] [preflight] Running pre-flight checks
I1107 13:50:31.974653  307277 kubeadm.go:322] [preflight] The system verification failed. Printing the output from the verification:
I1107 13:50:31.974749  307277 kubeadm.go:322] [0;37mKERNEL_VERSION[0m: [0;32m5.15.0-76-generic[0m
I1107 13:50:31.974801  307277 kubeadm.go:322] [0;37mOS[0m: [0;32mLinux[0m
I1107 13:50:31.974894  307277 kubeadm.go:322] [0;37mCGROUPS_CPU[0m: [0;32menabled[0m
I1107 13:50:31.974972  307277 kubeadm.go:322] [0;37mCGROUPS_CPUACCT[0m: [0;32menabled[0m
I1107 13:50:31.975044  307277 kubeadm.go:322] [0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
I1107 13:50:31.975116  307277 kubeadm.go:322] [0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
I1107 13:50:31.975189  307277 kubeadm.go:322] [0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
I1107 13:50:31.975262  307277 kubeadm.go:322] [0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
I1107 13:50:31.975331  307277 kubeadm.go:322] [0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
I1107 13:50:31.975403  307277 kubeadm.go:322] [0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
I1107 13:50:31.975474  307277 kubeadm.go:322] [0;37mCGROUPS_BLKIO[0m: [0;32menabled[0m
I1107 13:50:32.068338  307277 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I1107 13:50:32.068495  307277 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I1107 13:50:32.068635  307277 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I1107 13:50:32.408348  307277 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I1107 13:50:32.435592  307277 out.go:204]     ‚ñ™ G√©n√©ration des certificats et des cl√©s
I1107 13:50:32.435787  307277 kubeadm.go:322] [certs] Using existing ca certificate authority
I1107 13:50:32.435920  307277 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I1107 13:50:32.436292  307277 kubeadm.go:322] 	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/5.15.0-76-generic\n", err: exit status 1
I1107 13:50:32.436453  307277 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I1107 13:50:32.436594  307277 kubeadm.go:322] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I1107 13:50:32.437084  307277 kubeadm.go:322] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I1107 13:50:32.437251  307277 kubeadm.go:322] To see the stack trace of this error execute with --v=5 or higher
W1107 13:50:32.437309  307277 out.go:239] üí¢  l'initialisation a √©chou√©, va r√©essayer¬†: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.27.4
[preflight] Running pre-flight checks
[preflight] The system verification failed. Printing the output from the verification:
[0;37mKERNEL_VERSION[0m: [0;32m5.15.0-76-generic[0m
[0;37mOS[0m: [0;32mLinux[0m
[0;37mCGROUPS_CPU[0m: [0;32menabled[0m
[0;37mCGROUPS_CPUACCT[0m: [0;32menabled[0m
[0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
[0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
[0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
[0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
[0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
[0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
[0;37mCGROUPS_BLKIO[0m: [0;32menabled[0m
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/5.15.0-76-generic\n", err: exit status 1
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

I1107 13:50:32.437418  307277 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I1107 13:50:37.305424  307277 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": (4.867980975s)
I1107 13:50:37.305477  307277 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I1107 13:50:37.318890  307277 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I1107 13:50:37.318938  307277 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1107 13:50:37.329413  307277 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1107 13:50:37.329443  307277 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1107 13:50:37.386751  307277 kubeadm.go:322] [init] Using Kubernetes version: v1.27.4
I1107 13:50:37.386889  307277 kubeadm.go:322] [preflight] Running pre-flight checks
I1107 13:50:37.446366  307277 kubeadm.go:322] [preflight] The system verification failed. Printing the output from the verification:
I1107 13:50:37.446500  307277 kubeadm.go:322] [0;37mKERNEL_VERSION[0m: [0;32m5.15.0-76-generic[0m
I1107 13:50:37.446570  307277 kubeadm.go:322] [0;37mOS[0m: [0;32mLinux[0m
I1107 13:50:37.446674  307277 kubeadm.go:322] [0;37mCGROUPS_CPU[0m: [0;32menabled[0m
I1107 13:50:37.446765  307277 kubeadm.go:322] [0;37mCGROUPS_CPUACCT[0m: [0;32menabled[0m
I1107 13:50:37.446844  307277 kubeadm.go:322] [0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
I1107 13:50:37.446911  307277 kubeadm.go:322] [0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
I1107 13:50:37.446978  307277 kubeadm.go:322] [0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
I1107 13:50:37.447058  307277 kubeadm.go:322] [0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
I1107 13:50:37.447122  307277 kubeadm.go:322] [0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
I1107 13:50:37.447188  307277 kubeadm.go:322] [0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
I1107 13:50:37.447254  307277 kubeadm.go:322] [0;37mCGROUPS_BLKIO[0m: [0;32menabled[0m
I1107 13:50:37.529826  307277 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I1107 13:50:37.529981  307277 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I1107 13:50:37.530173  307277 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I1107 13:50:37.860752  307277 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I1107 13:50:37.887699  307277 out.go:204]     ‚ñ™ G√©n√©ration des certificats et des cl√©s
I1107 13:50:37.888364  307277 kubeadm.go:322] [certs] Using existing ca certificate authority
I1107 13:50:37.888656  307277 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I1107 13:50:37.889757  307277 kubeadm.go:322] 	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/5.15.0-76-generic\n", err: exit status 1
I1107 13:50:37.890320  307277 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I1107 13:50:37.890809  307277 kubeadm.go:322] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I1107 13:50:37.892269  307277 kubeadm.go:322] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I1107 13:50:37.892639  307277 kubeadm.go:322] To see the stack trace of this error execute with --v=5 or higher
I1107 13:50:37.892725  307277 kubeadm.go:406] StartCluster complete in 6.08006938s
I1107 13:50:37.892783  307277 cri.go:54] listing CRI containers in root : {State:all Name:kube-apiserver Namespaces:[]}
I1107 13:50:37.892925  307277 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-apiserver
I1107 13:50:37.968526  307277 cri.go:89] found id: ""
I1107 13:50:37.968538  307277 logs.go:284] 0 containers: []
W1107 13:50:37.968546  307277 logs.go:286] No container was found matching "kube-apiserver"
I1107 13:50:37.968552  307277 cri.go:54] listing CRI containers in root : {State:all Name:etcd Namespaces:[]}
I1107 13:50:37.968606  307277 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=etcd
I1107 13:50:38.026606  307277 cri.go:89] found id: ""
I1107 13:50:38.026619  307277 logs.go:284] 0 containers: []
W1107 13:50:38.026628  307277 logs.go:286] No container was found matching "etcd"
I1107 13:50:38.026640  307277 cri.go:54] listing CRI containers in root : {State:all Name:coredns Namespaces:[]}
I1107 13:50:38.026697  307277 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=coredns
I1107 13:50:38.088555  307277 cri.go:89] found id: ""
I1107 13:50:38.088570  307277 logs.go:284] 0 containers: []
W1107 13:50:38.088581  307277 logs.go:286] No container was found matching "coredns"
I1107 13:50:38.088589  307277 cri.go:54] listing CRI containers in root : {State:all Name:kube-scheduler Namespaces:[]}
I1107 13:50:38.088651  307277 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-scheduler
I1107 13:50:38.144708  307277 cri.go:89] found id: ""
I1107 13:50:38.144721  307277 logs.go:284] 0 containers: []
W1107 13:50:38.144732  307277 logs.go:286] No container was found matching "kube-scheduler"
I1107 13:50:38.144739  307277 cri.go:54] listing CRI containers in root : {State:all Name:kube-proxy Namespaces:[]}
I1107 13:50:38.144824  307277 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-proxy
I1107 13:50:38.201696  307277 cri.go:89] found id: ""
I1107 13:50:38.201708  307277 logs.go:284] 0 containers: []
W1107 13:50:38.201717  307277 logs.go:286] No container was found matching "kube-proxy"
I1107 13:50:38.201722  307277 cri.go:54] listing CRI containers in root : {State:all Name:kube-controller-manager Namespaces:[]}
I1107 13:50:38.201775  307277 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-controller-manager
I1107 13:50:38.261785  307277 cri.go:89] found id: ""
I1107 13:50:38.261799  307277 logs.go:284] 0 containers: []
W1107 13:50:38.261808  307277 logs.go:286] No container was found matching "kube-controller-manager"
I1107 13:50:38.261814  307277 cri.go:54] listing CRI containers in root : {State:all Name:kindnet Namespaces:[]}
I1107 13:50:38.261861  307277 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kindnet
I1107 13:50:38.318605  307277 cri.go:89] found id: ""
I1107 13:50:38.318628  307277 logs.go:284] 0 containers: []
W1107 13:50:38.318638  307277 logs.go:286] No container was found matching "kindnet"
I1107 13:50:38.318649  307277 logs.go:123] Gathering logs for kubelet ...
I1107 13:50:38.318664  307277 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I1107 13:50:38.333588  307277 logs.go:123] Gathering logs for dmesg ...
I1107 13:50:38.333603  307277 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I1107 13:50:38.407617  307277 logs.go:123] Gathering logs for describe nodes ...
I1107 13:50:38.407634  307277 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
W1107 13:50:38.485667  307277 logs.go:130] failed describe nodes: command: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig": Process exited with status 1
stdout:

stderr:
E1107 12:50:38.475902   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E1107 12:50:38.476373   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E1107 12:50:38.477900   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E1107 12:50:38.479489   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E1107 12:50:38.480945   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?
 output: 
** stderr ** 
E1107 12:50:38.475902   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E1107 12:50:38.476373   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E1107 12:50:38.477900   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E1107 12:50:38.479489   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E1107 12:50:38.480945   13678 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?

** /stderr **
I1107 13:50:38.485689  307277 logs.go:123] Gathering logs for Docker ...
I1107 13:50:38.485698  307277 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I1107 13:50:38.560628  307277 logs.go:123] Gathering logs for container status ...
I1107 13:50:38.560645  307277 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
W1107 13:50:38.620173  307277 out.go:369] Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.27.4
[preflight] Running pre-flight checks
[preflight] The system verification failed. Printing the output from the verification:
[0;37mKERNEL_VERSION[0m: [0;32m5.15.0-76-generic[0m
[0;37mOS[0m: [0;32mLinux[0m
[0;37mCGROUPS_CPU[0m: [0;32menabled[0m
[0;37mCGROUPS_CPUACCT[0m: [0;32menabled[0m
[0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
[0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
[0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
[0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
[0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
[0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
[0;37mCGROUPS_BLKIO[0m: [0;32menabled[0m
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/5.15.0-76-generic\n", err: exit status 1
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher
W1107 13:50:38.620199  307277 out.go:239] 
W1107 13:50:38.620342  307277 out.go:239] üí£  Erreur lors du d√©marrage du cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.27.4
[preflight] Running pre-flight checks
[preflight] The system verification failed. Printing the output from the verification:
[0;37mKERNEL_VERSION[0m: [0;32m5.15.0-76-generic[0m
[0;37mOS[0m: [0;32mLinux[0m
[0;37mCGROUPS_CPU[0m: [0;32menabled[0m
[0;37mCGROUPS_CPUACCT[0m: [0;32menabled[0m
[0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
[0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
[0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
[0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
[0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
[0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
[0;37mCGROUPS_BLKIO[0m: [0;32menabled[0m
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/5.15.0-76-generic\n", err: exit status 1
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W1107 13:50:38.620410  307277 out.go:239] 
W1107 13:50:38.622372  307277 out.go:239] [31m‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ[0m
[31m‚îÇ[0m                                                                                                  [31m‚îÇ[0m
[31m‚îÇ[0m    üòø  Si les conseils ci-dessus ne vous aident pas, veuillez nous en informer :                 [31m‚îÇ[0m
[31m‚îÇ[0m    üëâ  https://github.com/kubernetes/minikube/issues/new/choose                                  [31m‚îÇ[0m
[31m‚îÇ[0m                                                                                                  [31m‚îÇ[0m
[31m‚îÇ[0m    Veuillez ex√©cuter `minikube logs --file=logs.txt` et attachez logs.txt au probl√®me GitHub.    [31m‚îÇ[0m
[31m‚îÇ[0m                                                                                                  [31m‚îÇ[0m
[31m‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ[0m
I1107 13:50:38.674438  307277 out.go:177] 
W1107 13:50:38.726939  307277 out.go:239] ‚ùå  Fermeture en raison de GUEST_START : failed to start node: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.27.4
[preflight] Running pre-flight checks
[preflight] The system verification failed. Printing the output from the verification:
[0;37mKERNEL_VERSION[0m: [0;32m5.15.0-76-generic[0m
[0;37mOS[0m: [0;32mLinux[0m
[0;37mCGROUPS_CPU[0m: [0;32menabled[0m
[0;37mCGROUPS_CPUACCT[0m: [0;32menabled[0m
[0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
[0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
[0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
[0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
[0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
[0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
[0;37mCGROUPS_BLKIO[0m: [0;32menabled[0m
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/5.15.0-76-generic\n", err: exit status 1
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W1107 13:50:38.727251  307277 out.go:239] 
W1107 13:50:38.731064  307277 out.go:239] [31m‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ[0m
[31m‚îÇ[0m                                                                                                  [31m‚îÇ[0m
[31m‚îÇ[0m    üòø  Si les conseils ci-dessus ne vous aident pas, veuillez nous en informer :                 [31m‚îÇ[0m
[31m‚îÇ[0m    üëâ  https://github.com/kubernetes/minikube/issues/new/choose                                  [31m‚îÇ[0m
[31m‚îÇ[0m                                                                                                  [31m‚îÇ[0m
[31m‚îÇ[0m    Veuillez ex√©cuter `minikube logs --file=logs.txt` et attachez logs.txt au probl√®me GitHub.    [31m‚îÇ[0m
[31m‚îÇ[0m                                                                                                  [31m‚îÇ[0m
[31m‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ[0m
I1107 13:50:38.780501  307277 out.go:177] 

* 
* ==> Docker <==
* Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:36 minikube cri-dockerd[11094]: time="2023-11-07T12:50:36Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Nov 07 12:50:37 minikube cri-dockerd[11094]: time="2023-11-07T12:50:37Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                ATTEMPT             POD ID              POD

* 
* ==> describe nodes <==
* 
* ==> dmesg <==
* [  +0.995740] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000008] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000009] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[ +15.994532] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000043] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000010] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +1.005003] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000008] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000009] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +0.001407] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000008] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000009] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[Nov 7 12:46] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000008] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000009] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +0.001329] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000011] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000012] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +2.174302] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000012] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000013] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +1.860230] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000008] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000009] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +0.313588] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000008] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000010] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +0.688529] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000010] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000010] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +0.960062] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000010] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000043] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +0.047891] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000009] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000011] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +1.007198] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000010] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000011] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +5.376105] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000016] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000015] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +1.893205] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000077] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000011] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +0.809642] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000008] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000008] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +2.861003] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000014] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000014] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +2.999013] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000009] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000009] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +6.998634] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000008] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000010] pcieport 0000:00:1c.0:    [ 0] RxErr                 
[  +2.153863] pcieport 0000:00:1c.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID)
[  +0.000004] pcieport 0000:00:1c.0:   device [8086:9d10] error status/mask=00000001/00002000
[  +0.000004] pcieport 0000:00:1c.0:    [ 0] RxErr                 

* 
* ==> kernel <==
*  12:53:50 up  5:28,  0 users,  load average: 0.40, 0.75, 1.14
Linux minikube 5.15.0-76-generic #83~20.04.1-Ubuntu SMP Wed Jun 21 20:23:31 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.2 LTS"

* 
* ==> kubelet <==
* -- No entries --

